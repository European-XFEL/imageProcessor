project = 'Image Processor'
copyright = '2018, European XFEL GmbH'
author = 'A. Parenti'

# The short X.Y version
version = ''
# The full version, including alpha/beta/rc tags
release = ''

extensions = [
    'sphinx.ext.intersphinx',
    'sphinx.ext.extlinks',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'default'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'XFELControlDocumentationdoc'

#we add a custom function to work with intersphinx
import slumber

# the RTDHOST should be set to localhost if you only compile on RTD
# otherwise it needs to be set to the server hosting the internal RTD
RTDHOST = 'https://in.xfel.eu/readthedocs'
api = slumber.API(base_url='{}/api/v1/'.format(RTDHOST))
public_slugs = []
offset = 0
while True:
    # get the *public* projects (by default they are limited)
    # so we increment the offset of the query until
    # it returns empty handed
    new_projs = api.project.get(offset=offset)['objects']
    if len(new_projs) == 0:
        break
    offset += len(new_projs)
    public_slugs.extend([proj['slug'] for proj in new_projs])


def _insert(d, slug):
    d[slug.replace('-', '')] = \
     ('{}/docs/{}/en/latest'.format(RTDHOST, slug), None)


  # defining some default RTD intersphinx place map elements
isphinx = {'python': ('http://python.readthedocs.io/en/latest/', None),
           'numpy': ('http://numpy.readthedocs.io/en/latest/', None)}


for slug in public_slugs:
    _insert(isphinx, slug)

intersphinx_mapping = isphinx

extlinks = {'rtd': ('https://in.xfel.eu/readthedocs/docs/%s/en/latest/',
                    '')}

